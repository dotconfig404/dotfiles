# change the prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix


# start with window/pane 1 (instead of 0)
set -g base-index 1
set -g pane-base-index 1

# split panes using v and h, make sure they open in the same path
bind y split-window -h -c "#{pane_current_path}"
bind x split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %
bind c new-window -c "#{pane_current_path}"

# reload config file
bind r source-file ~/.tmux.conf

# mouse control (clickable windows, panes, resizable panes)
set -g mouse on

# set default terminal mode to 256 colors
set -g default-terminal "screen-256color"


#########################################################
######## for vim ########################################
#########################################################
# enable vi mode keys
set-window-option -g mode-keys vi

#bind-key -T copy-mode-vi 'v' send -X begin-selection
# Begin selection in copy mode.
#bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle
# Begin selection in rectangle copy mode.
#bind-key -T copy-mode-vi 'y' send -X copy-selection
# Yank selection in copy mode.
#unbind-key -T copy-mode-vi v

# Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
#bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
#bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
#bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
#bind-key -n M-\ if-shell "$is_vim" "send-keys M-\\" "select-pane -l"
#bind-key -T copy-mode-vi M-h select-pane -L
#bind-key -T copy-mode-vi M-j select-pane -D
#bind-key -T copy-mode-vi M-k select-pane -U
#bind-key -T copy-mode-vi M-l select-pane -R
#bind-key -T copy-mode-vi M-\ select-pane -l

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind-key -n M-h  select-pane -L
bind-key -n M-j  select-pane -D
bind-key -n M-k  select-pane -U
bind-key -n M-l  select-pane -R
bind-key -n M-\  select-pane -l

#bind -n M-S-Left previous-window
#bind -n M-S-right next-window


#bind-key j resize-pane -D 5
#bind-key k resize-pane -U 5
#bind-key h resize-pane -L 5
#bind-key l resize-pane -R 5
bind-key C-j resize-pane -D
bind-key C-k resize-pane -U
bind-key C-h resize-pane -L
bind-key C-l resize-pane -R


# Status
set -g status-left ''
set -g status-right '#[fg=colour2,bold,bg=colour238,bold] %B #[fg=colour2,bold,bg=colour238,bold]%d, #[fg=colour2,bold,bg=colour238,bold]%Y#[fg=default] #[fg=colour46,bold,bg=colour238,bold] %R '
set -g status-right-length 100
set -g status-bg colour238
setw -g window-status-format '#[fg=colour238,bold,bg=colour226,bold] #I #[fg=colour226,bold,bg=colour238,bold] #W '
setw -g window-status-current-format '#[fg=colour8,bold,bg=colour46,bold] #I #[fg=colour46,bold,bg=colour238,bold] #W '

# THEME
#set -g status-bg black
#set -g status-fg white
#set -g window-status-current-bg white
#set -g window-status-current-fg black
#set -g window-status-current-attr bold
#set -g status-interval 60
#set -g status-left-length 30
#set -g status-left '#[fg=green](#S) #(whoami) '
#set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'
